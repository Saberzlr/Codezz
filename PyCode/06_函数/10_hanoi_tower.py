"""
------------------------------------
@Version :   1.0
@Time    :   2024/02/11 23:56
@File    :   10_hanoi_tower.py
@Author  :   Saber 
------------------------------------
"""

# 汉诺塔的实现
'''
思路分析:
1) 如果只有一个盘 => 直接将其从a柱移动到c柱
2) 如果不止一个盘,则分为上下两部分(上面所有的盘和最下面一个盘):
    1) 将上部分所有盘移动到b柱(过程中会借助到c柱)
    2) 下部分(最下面的一个盘)移动到c柱
    3) 将b柱上的所有盘移动到c柱(过程中会借助到a柱)
'''

def hanoi_tower(num, a, b, c):
    """_summary_
    输出指定num个盘子移动的顺序
    Args:
        num (_type_): 指定盘子数量
        a (_type_): 柱子1
        b (_type_): 柱子2
        c (_type_): 柱子3
    """
    if num == 1:
        # 直接将其从a柱移动到c柱
        print("第1个盘从:", a, "->", c)
    else:
        # 将上部分所有盘移动到b柱(过程中会借助到c柱)
        hanoi_tower(num - 1, a, c, b)
        # 移动最下面的盘
        print(f"第{num}个盘从{a} -> {c}")
        # 将上部分所有盘从b柱移动到c柱(过程中会借助到a柱)
        hanoi_tower(num - 1, b, a, c)

# 测试
hanoi_tower(5, "A", "B", "C")